//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace webAI_UNAM
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class imDesarrolloEntities : DbContext
    {
        public imDesarrolloEntities()
            : base("name=imDesarrolloEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<catMateriaTemaPreguntaRespuestaBitacora> catMateriaTemaPreguntaRespuestaBitacora { get; set; }
        public virtual DbSet<catMateriaTemaSintesis> catMateriaTemaSintesis { get; set; }
        public virtual DbSet<catMateriaTema> catMateriaTema { get; set; }
        public virtual DbSet<catMateriaTemaPregunta> catMateriaTemaPregunta { get; set; }
        public virtual DbSet<catMateriaTemaPreguntaRespuesta> catMateriaTemaPreguntaRespuesta { get; set; }
        public virtual DbSet<catMateria> catMateria { get; set; }
        public virtual DbSet<catPerfiles> catPerfiles { get; set; }
        public virtual DbSet<catTipoUsuarios> catTipoUsuarios { get; set; }
        public virtual DbSet<tblUsuarios> tblUsuarios { get; set; }
        public virtual DbSet<catBusquedaUsuario> catBusquedaUsuario { get; set; }
        public virtual DbSet<catGenero> catGenero { get; set; }
        public virtual DbSet<tblMexCP> tblMexCP { get; set; }
    
        [DbFunction("imDesarrolloEntities", "tblPreguntasRespuestas")]
        public virtual IQueryable<tblPreguntasRespuestas_Result> tblPreguntasRespuestas(Nullable<int> materiaF, Nullable<System.Guid> usuarioFiltrado)
        {
            var materiaFParameter = materiaF.HasValue ?
                new ObjectParameter("MateriaF", materiaF) :
                new ObjectParameter("MateriaF", typeof(int));
    
            var usuarioFiltradoParameter = usuarioFiltrado.HasValue ?
                new ObjectParameter("UsuarioFiltrado", usuarioFiltrado) :
                new ObjectParameter("UsuarioFiltrado", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<tblPreguntasRespuestas_Result>("[imDesarrolloEntities].[tblPreguntasRespuestas](@MateriaF, @UsuarioFiltrado)", materiaFParameter, usuarioFiltradoParameter);
        }
    
        public virtual ObjectResult<PreguntasSP_Result> PreguntasSP(Nullable<int> materiaIDFiltro, Nullable<int> materiaTemaIDFiltro, Nullable<int> tipoPregunta)
        {
            var materiaIDFiltroParameter = materiaIDFiltro.HasValue ?
                new ObjectParameter("MateriaIDFiltro", materiaIDFiltro) :
                new ObjectParameter("MateriaIDFiltro", typeof(int));
    
            var materiaTemaIDFiltroParameter = materiaTemaIDFiltro.HasValue ?
                new ObjectParameter("MateriaTemaIDFiltro", materiaTemaIDFiltro) :
                new ObjectParameter("MateriaTemaIDFiltro", typeof(int));
    
            var tipoPreguntaParameter = tipoPregunta.HasValue ?
                new ObjectParameter("TipoPregunta", tipoPregunta) :
                new ObjectParameter("TipoPregunta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PreguntasSP_Result>("PreguntasSP", materiaIDFiltroParameter, materiaTemaIDFiltroParameter, tipoPreguntaParameter);
        }
    
        public virtual ObjectResult<RespuestasSP_Result> RespuestasSP(Nullable<int> materiaIDFiltro, Nullable<int> materiaTemaIDFiltro, Nullable<int> materiaTemaPreguntaIDFiltro)
        {
            var materiaIDFiltroParameter = materiaIDFiltro.HasValue ?
                new ObjectParameter("MateriaIDFiltro", materiaIDFiltro) :
                new ObjectParameter("MateriaIDFiltro", typeof(int));
    
            var materiaTemaIDFiltroParameter = materiaTemaIDFiltro.HasValue ?
                new ObjectParameter("MateriaTemaIDFiltro", materiaTemaIDFiltro) :
                new ObjectParameter("MateriaTemaIDFiltro", typeof(int));
    
            var materiaTemaPreguntaIDFiltroParameter = materiaTemaPreguntaIDFiltro.HasValue ?
                new ObjectParameter("MateriaTemaPreguntaIDFiltro", materiaTemaPreguntaIDFiltro) :
                new ObjectParameter("MateriaTemaPreguntaIDFiltro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RespuestasSP_Result>("RespuestasSP", materiaIDFiltroParameter, materiaTemaIDFiltroParameter, materiaTemaPreguntaIDFiltroParameter);
        }
    }
}
